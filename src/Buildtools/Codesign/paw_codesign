#!/bin/bash
export THISDIR=$(pwd)
###############################################################
#  paw_codesign
#
#  on macos, the parallel executable of the code needs to be signed
#  to avoid pop-up windows asking whether the code may communicate
#
#  This shell script assumes that there is a signature paw_codesign
#  in the keychain and the file ~/bin/paw-entitlement.xml exists.
#  (see Administration/Howtos/codesign-howto on how to generate them)
#
#  paw_codesign signs all instances of the parallel versions
#  (bin/*/ppaw*.x). It can be executed after each compilation of a
#  parallel code.
#
#
#  written by Peter Bloechl 13.09.2021
###############################################################

##############################################################
# codesign -vv $(which ppaw_dbg.x) 
# success
#..ppaw_dbg.x: valid on disk
#..ppaw_dbg.x: satisfies its Designated Requirement
# failure 
#.. ppaw_dbg.x: code object is not signed at all
#.. In architecture: x86_64
##############################################################
export TMPFILE=$(mktemp /tmp/paw_codesign.XXXXXX)
for X in ${THISDIR}/bin/*/ppaw_*.x ; do
  # verify code signature 
  codesign -vv $X 2> $TMPFILE 
  Y1=$(grep 'valid on disk' $TMPFILE)
  Y2=$(grep 'not signed' $TMPFILE)
  if [[ -z $Y1 ]]; then
    # do the code signing
    echo code-signing $X
    codesign --entitlements ~/bin/paw-entitlement.xml -fs paw_codesign $X
  else
    echo no codesigning required for X=$X
  fi
  # verify code signature 
  codesign -vv $X 2> $TMPFILE 
  Y1=$(grep 'valid on disk' $TMPFILE)
  if [[ ! -z $Y1 ]]; then
    echo code-signing $X succeeded
  else
    echo code-signing $X failed
  fi
done
#echo $TMPFILE
rm $TMPFILE
