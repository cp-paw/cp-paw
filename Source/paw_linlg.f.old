!***********************************************************************
!***********************************************************************
!**                                                                   **
!**  INTERFACES TO LINAR ALGEBRA ROUTINES                             **
!**                                                                   **
!**                                                                   **
!**  USES THE ESSL LIBRARY                                            **
!**                                                                   **
!***********************************************************************
!***********************************************************************
!
!     ..................................................................
      SUBROUTINE LINALG$INVERTr8(N,A,AINV)
!     ******************************************************************
!     **                                                              **
!     **  INVERTS THE REAL, SQUARE MATRIX A                           **
!     **                                                              **
!     **  DEPENDENCIES:                                               **
!     **    ESSL                                                      **
!     **                                                              **
!     ******************************************************************
      IMPLICIT NONE
      INTEGER(4),INTENT(IN) :: N
      REAL(8)   ,INTENT(IN) :: A(N,N)
      REAL(8)   ,INTENT(OUT):: AINV(N,N)
      INTEGER(4)            :: NAUX
      REAL(8)               :: AUX(100*N)
      REAL(8)               :: RCOND
      REAL(8)               :: DET(2)
      INTEGER(4)            :: I,J
!     ******************************************************************
      NAUX=100*N
      DO I=1,N
        DO J=1,N
          AINV(I,J)=A(I,J)
        ENDDO
      ENDDO
      CALL DGEICD(AINV,N,N,0,RCOND,DET,AUX,NAUX)
      RETURN
      END
!
!     ..................................................................
      SUBROUTINE DIAG(NX,N,H,E,U)
!     ******************************************************************
!     **                                                              **
!     **  DIAGONALIZES THE REAL, SQUARE MATRIX H AFTER SYMMETRIZATION **
!     **  AND RETURNS EIGENVALUES, AND EIGENVECTORS                   **
!     **                                                              **
!     **         U(K,I)*H(K,L)*U(L,J)=DELTA(I,J)*E(I)                 **
!     **                                                              **
!     **  DEPENDENCIES:                                               **
!     **    ESSL                                                      **
!     **                                                              **
!     **  REMARKS:                                                    **
!     **   1) THE EIGENVECTORS ARE REAL BECAUSE IN CASE THEY ARE      **
!     **      COMPLEX REAL AND IMAGINARY PART ARE DEGENERATE          **
!     **      CAN THUS CAN ACT AS EIGENVECTORS THEMSELVES             **
!     **                                                              **
!     ******************************************************************
      IMPLICIT NONE
      INTERFACE
        SUBROUTINE EINFO(ICODE,INF1,INF2) !ESSL ERROR HANDLING ROUTINE
        INTEGER                       :: ICODE
        INTEGER ,INTENT(OUT),OPTIONAL :: INF1
        INTEGER ,INTENT(OUT),OPTIONAL :: INF2
        END SUBROUTINE EINFO
      END INTERFACE
      LOGICAL(4) ,PARAMETER :: TESSLERR=.FALSE.
      INTEGER(4),INTENT(IN) :: NX
      INTEGER(4),INTENT(IN) :: N
      REAL(8)   ,INTENT(IN) :: H(NX,N)
      REAL(8)   ,INTENT(OUT):: E(N)
      REAL(8)   ,INTENT(OUT):: U(NX,N)
      REAL(8)               :: WORK1((NX*(NX+1))/2)
      REAL(8)               :: WORK2(2*NX)
      INTEGER(4)            :: K,I,J
      CHARACTER(8)          :: SAV2101
      INTEGER(4)            :: I1,I2
!     ******************************************************************
!     ==================================================================
!     ====  ESSL ERROR HANDLING                                       ==
!     ==================================================================
      IF(TESSLERR) THEN
        CALL EINFO(0)
        CALL ERRSAV(2101,SAV2101)
        CALL ERRSET(2101,255,0,0,0,2101)
      END IF
!
!     ==================================================================
!     ====  STORE IN LOWER PACKED STORAGE MODE FOR DIAGONALIZATION    ==
!     ==================================================================
      K=0
      DO J=1,N
        DO I=J,N
          K=K+1
          WORK1(K)=0.5D0*(H(I,J)+H(J,I))
        ENDDO
      ENDDO
!
!     ==================================================================
!     == DIAGONALIZE                                                  ==
!     ==================================================================
!     CALL DSPEV(1,WORK1,E,U,NX,N,WORK2,2*NX,*400)
      CALL DSPEV(1,WORK1,E,U,NX,N,WORK2,2*NX)

!     ==================================================================
!     ====  ESSL ERROR HANDLING                                       ==
!     ==================================================================
      IF(TESSLERR) CALL ERRSTR(2101,SAV2101)
      RETURN
!
 400  CONTINUE
      CALL EINFO(2101,I1,I2)
      CALL ERRSTR(2101,SAV2101)
      DO I=1,N
        PRINT*,'H ',I,H(1:3,I)
      ENDDO
      CALL ERROR$MSG('DIAGONALIZATION NOT CONVERGED')
      CALL ERROR$I4VAL('EIGENVALUE FAILED TO CONVERGE',I1)
      CALL ERROR$I4VAL('NUMBER OF ITERATIONS',I2)
      CALL ERROR$STOP('DIAG')
      RETURN
      END
!
!     ..................................................................
      SUBROUTINE CDIAG(NX,N,H,E,U)
!     ******************************************************************
!     **                                                              **
!     **  DIAGONALIZES THE HERMITEAN, SQUARE MATRIX H                 **
!     **  AND RETURNS EIGENVALUES, AND EIGENVECTORS                   **
!     **                                                              **
!     **      CONJG(U(K,I))*H(K,L)*U(L,J)=DELTA(I,J)*E(I)             **
!     **                                                              **
!     **  DEPENDENCIES:                                               **
!     **    ESSL                                                      **
!     **                                                              **
!     **  REMARKS:                                                    **
!     **   1) THE EIGENVECTORS ARE REAL BECAUSE IN CASE THEY ARE      **
!     **      COMPLEX REAL AND IMAGINARY PART ARE DEGENERATE          **
!     **      CAN THUS CAN ACT AS EIGENVECTORS THEMSELVES             **
!     **                                                              **
!     ******************************************************************
      IMPLICIT NONE
      INTERFACE
        SUBROUTINE EINFO(ICODE,INF1,INF2) !ESSL ERROR HANDLING ROUTINE
        INTEGER                       :: ICODE
        INTEGER ,INTENT(OUT),OPTIONAL :: INF1
        INTEGER ,INTENT(OUT),OPTIONAL :: INF2
        END SUBROUTINE EINFO
      END INTERFACE
      LOGICAL(4) ,PARAMETER :: TESSLERR=.FALSE.
      INTEGER(4),INTENT(IN) :: NX
      INTEGER(4),INTENT(IN) :: N
      COMPLEX(8),INTENT(IN) :: H(NX,N)
      REAL(8)   ,INTENT(OUT):: E(N)
      COMPLEX(8),INTENT(OUT):: U(NX,N)
      COMPLEX(8)            :: WORK1((NX*(NX+1))/2)
      REAL(8)               :: WORK2(4*NX)
      INTEGER(4)            :: K,I,J
      CHARACTER(8)          :: SAV2101
      INTEGER(4)            :: I1,I2
      LOGICAL(4),PARAMETER  :: TTEST=.FALSE.
      COMPLEX(8)            :: CSVAR
      LOGICAL(4)            :: TCHK
      COMPLEX(8),ALLOCATABLE:: WORK3(:,:)
!     ******************************************************************
!     ==================================================================
!     ====  ESSL ERROR HANDLING                                       ==
!     ==================================================================
      IF(TESSLERR) THEN
        CALL EINFO(0)
        CALL ERRSAV(2101,SAV2101)
        CALL ERRSET(2101,255,0,0,0,2101)
      END IF
!
!     ==================================================================
!     ====  STORE IN LOWER PACKED STORAGE MODE FOR DIAGONALIZATION    ==
!     ==================================================================
      K=0
      DO J=1,N
        DO I=J,N
          K=K+1
          WORK1(K)=0.5D0*(H(I,J)+CONJG(H(J,I)))
        ENDDO
      ENDDO
!
!     ==================================================================
!     == DIAGONALIZE                                                  ==
!     ==================================================================
      CALL ZHPEV(1,WORK1,E,U,NX,N,WORK2,4*NX)

!     ==================================================================
!     ====  ESSL ERROR HANDLING                                       ==
!     ==================================================================
      IF(TESSLERR) CALL ERRSTR(2101,SAV2101)
!
!     ==================================================================
!     ====  OPTIONAL TEST                                             ==
!     ==================================================================
      IF(TTEST) THEN
        ALLOCATE(WORK3(N,N)) 
        TCHK=.TRUE.
        DO I=1,N
          DO J=1,N
            CSVAR=(0.D0,0.D0)
            DO K=1,N
              CSVAR=CSVAR+U(I,K)*E(K)*CONJG(U(J,K))
            ENDDO
            IF(ABS(CSVAR-H(I,J)).GT.1.D-8) THEN
              WRITE(*,FMT='(2I5,5F10.5)')I,J,CSVAR,H(I,J),ABS(CSVAR-H(I,J))
              TCHK=.FALSE.
            END IF
          ENDDO
        ENDDO
        DEALLOCATE(WORK3)
        IF(.NOT.TCHK) THEN
          CALL ERROR$MSG('DIAGONALIZATION TEST FAILED')
          CALL ERROR$STOP('CDIAG')
        END IF
      END IF
      RETURN
!
 400  CONTINUE
      CALL EINFO(2101,I1,I2)
      CALL ERRSTR(2101,SAV2101)
      DO I=1,N
        PRINT*,'H ',I,H(1:3,I)
      ENDDO
      CALL ERROR$MSG('DIAGONALIZATION NOT CONVERGED')
      CALL ERROR$I4VAL('EIGENVALUE FAILED TO CONVERGE',I1)
      CALL ERROR$I4VAL('NUMBER OF ITERATIONS',I2)
      CALL ERROR$STOP('CDIAG')
      RETURN
      END
!
!     ..................................................................
      SUBROUTINE INVERT(N,A,AINV)
!     ******************************************************************
!     **                                                              **
!     **  INVERTS THE REAL, SQUARE MATRIX A                           **
!     **                                                              **
!     **  DEPENDENCIES:                                               **
!     **    ESSL                                                      **
!     **                                                              **
!     ******************************************************************
      IMPLICIT NONE
      INTEGER(4),INTENT(IN) :: N
      REAL(8)   ,INTENT(IN) :: A(N,N)
      REAL(8)   ,INTENT(OUT):: AINV(N,N)
      INTEGER(4)            :: NAUX
      REAL(8)               :: AUX(100*N)
      REAL(8)               :: RCOND
      REAL(8)               :: DET(2)
      INTEGER(4)            :: I,J
!     ******************************************************************
      NAUX=100*N
      DO I=1,N
        DO J=1,N
          AINV(I,J)=A(I,J)
        ENDDO
      ENDDO
      CALL DGEICD(AINV,N,N,0,RCOND,DET,AUX,NAUX)
      RETURN
      END

