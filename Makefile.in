#
SHELL=/bin/sh
#
#########################################################################
##                                                                     ##
##  make a paw executable and a paw library using gmake                ##
##  ===================================================                ##
##                                                                     ##
#########################################################################
##                                                                     ##
##  Primary targets:                                                   ##
##                                                                     ##
##  directory structure                                                ##
##    @PAWDIR@/bin/@ARCH@       executables                            ##
##    @PAWDIR@/bin/@ARCH@/none  objects with simple compiler flags     ##
##    @PAWDIR@/bin/@ARCH@/fast  optimized objects                      ##
##    @PAWDIR@/bin/@ARCH@/prof  objects for profiling                  ##
##    @PAWDIR@/bin/@ARCH@/dbg   objects for debugging                  ##
##    @PAWDIR@/src              sources for CP-PAW main code           ##
##    @PAWDIR@/src/Tools        directory containing Tools             ##
##    @PAWDIR@/src/F90PP        directory preprocessor etc             ##
##                                                                     ##
##  variables set by autoconf                                          ##
##    LINK=@LINK@                                                      ##
##    LLIBS=@LLIBS@                                                    ##
##                                                                     ##
##                                                                     ##
##                                                                     ##
#########################################################################
## The following block of variables is set by the configure            ##
## script (AC_SUBST @...@ and sed-Commands var...)                     ##
#########################################################################
#
#___________________________ variables that may appear unresolved 
BLASDIR=@BLASDIR@
LAPACKDIR=@LAPACKDIR@
FFTDIR=@FFTDIR@
MPIDIR=@MPIDIR@
#
INCLUDE_FFTW=@INCLUDE_FFTW@
#
INCLUDE_MPI=@INCLUDE_MPI@
#
SPECIAL=@SPECIAL@
#___________________________ root directory of the PAW distribution
PAWDIR=@PAWDIR@
#___________________________ set to T, if this is Makefile.parallel 
PARALLEL=varPARALLEL
#___________________________ Fortran90 compiler + compiler flags 
COMPILE=@COMPILE@
#____________________________link flags
LLINK=@LLINK@
#___________________________ link flags for parrallel executable
LLINKPARALLEL=@LLINKPARALLEL@
#___________________________ libraries for scalar executable
LLIBS=@LLIBS@
#___________________________ libraries for parallel executable
LLIBSPARALLEL=@LLIBSPARALLEL@
#___________________________ the hardware architecture
ARCH=@ARCH@
#___________________________ object type (none,fast,dbg,prof)
OBJTYPE=varOBJTYPE
#___________________________ parameters for f90pp
CPPVAR=@CPPVAR@ 
#___________________________ the PAW-binary (inclusive path)
PAWX=@PAWX@
#___________________________ the extension of files to be compiled
FEXT=@FEXT@
#___________________________ the way to compile the tools 
TOOLCOMP=@TOOLCOMP@
#___________________________ the GNU make utility
MAKE=@MAKE@
#
##########################################################################
#
#  complete shortcuts to directories etc
#
##########################################################################
#___________________________ path to the object files
OBJDIR=${PAWDIR}/bin/${ARCH}/Objects/${OBJTYPE}
#___________________________ path to the binaries
BINDIR=${PAWDIR}/bin/${ARCH}
#___________________________ path to the source files
SRCDIR=${PAWDIR}/src
#___________________________ path to the tool-directory
TOOLDIR=${PAWDIR}/src/Tools
#
##########################################################################
##  define parameters                                                   ##
##########################################################################
#
# at this point a distinction between parallel and sequential Makefile is
# made, as different preprocessor variables have to be used and different
# libraries are linked
#
ifeq (${PARALLEL},T)   #select parallel versus scalar paw_mpelib.f90
  MODE = _p
  LLIBS=${LLIBSPARALLEL}
  LINK=@LINK@  -I${OBJDIR} -L${OBJDIR} ${LLINKPARALLEL}
  #___________________________ f90pp command
  F90PP=${BINDIR}/f90pp ${CPPVAR} -DCPPVARIABLE_PARALLEL 
else
  MODE = _s
  LLIBS=@LLIBS@
  LINK=@LINK@ -I${OBJDIR} -L${OBJDIR} ${LLINK} 
  #___________________________ f90pp command
  F90PP=${BINDIR}/f90pp ${CPPVAR}
endif
ifeq (${SPECIAL},IBM)
  POE_PREFIX=poe
  POE_SUFFIX=-proc 1 -nodes 1 -rmpool 0
else
  POE_PREFIX=
  POE_SUFFIX=
endif
#
# out of the file src/paw_mpelib.f a parallel _p and
# a sequential _s version are produced
#
MPE = ${OBJDIR}/paw_mpelib$(MODE).o
#
##########################################################################
##  include files                                                       ##
##########################################################################
#
# FFTW_F77.I is an include file for the FFTW-library
# in case FFTW is linked, this file has to be copied into the 
# object directory
# 
ifneq ($(strip ${INCLUDE_FFTW}),) 
  # copy includefile into object directory
  FFTWINCLUDE=cp ${INCLUDE_FFTW} ${OBJDIR}/fftw_f77.i
else
  # not there, just create an empty file
  FFTWINCLUDE= touch ${OBJDIR}/fftw_f77.i
endif
#
# MPIF.H is an include file for the MPICH-library
# for parallel compilation, this file has to be copied into
# the object directory. Not needed for IBM environment
# the include file is usually named mpif.f90
#
ifneq ($(strip ${INCLUDE_MPI}),) 
  # copy includefile into object directory
  MPIINCLUDE=cp ${INCLUDE_MPI} ${OBJDIR}/mpif.h
else
  # not there, just create an empty file
  MPIINCLUDE= touch ${OBJDIR}/mpif.h
endif
#
# paw_mpelib.f holds the subroutines necessary for parallel execution
# of the code. Via preprocessor variables, this source is split up into
# two files, one for parallel and one for sequential execution. ($MODE is
# defined in the if-statement above)
# libpaw.a holds the object files and can be linked to any code which 
# needs a PAW subroutine (leave the # after libpaw.a)
# MPE   = ${OBJDIR}/paw_mpelib$(MODE).o
PAWLIB= ${OBJDIR}/libpaw.a#         
#
#########################################################################
## Definition of the targets                                           ##
#########################################################################
default: ${PAWX}
#
##########################################################################
##  define object files kept in the library                             ##
##########################################################################
#
LOBJS = \
        ${OBJDIR}/paw_trace.o \
        ${OBJDIR}/paw_error.o \
        ${OBJDIR}/paw_filehandler.o \
        ${OBJDIR}/paw_clock.o \
        ${OBJDIR}/paw_lock.o \
        ${OBJDIR}/paw_timing.o \
        ${OBJDIR}/paw_linkedlist.o \
        ${OBJDIR}/paw_strings.o \
        ${OBJDIR}/paw_dft.o \
        ${OBJDIR}/paw_dftaddendum.o \
        ${OBJDIR}/paw_constants.o \
        ${OBJDIR}/paw_spherical.o \
        ${OBJDIR}/paw_generalpurpose.o \
        ${OBJDIR}/paw_report.o \
        ${OBJDIR}/paw_periodictable.o \
        ${OBJDIR}/paw_radial.o \
        ${OBJDIR}/paw_schroedinger.o \
        ${OBJDIR}/paw_specialfunctions.o \
        ${OBJDIR}/paw_usage.o \
        ${OBJDIR}/paw_selftest.o \
        ${OBJDIR}/paw_strcio.o \
        ${OBJDIR}/paw_cell.o \
        ${OBJDIR}/paw_pdos.o \
        ${OBJDIR}/paw_library.o \
        ${OBJDIR}/paw_polynom.o \
        ${OBJDIR}/paw_dimer.o  \
        ${OBJDIR}/paw_debug.o
#
##########################################################################
##  define other objects                                                ##
##########################################################################
#
OBJECTS1 = \
           ${OBJDIR}/paw_thermostat.o \
           ${OBJDIR}/paw_isolate.o \
           ${OBJDIR}/paw_assist.o \
           ${OBJDIR}/paw_ldaplusu.o \
           ${OBJDIR}/paw_lists.o \
           ${OBJDIR}/paw_constraints.o \
           ${OBJDIR}/paw_fft.o \
#
OBJECTS2 = \
           ${OBJDIR}/paw_augmentation.o \
           ${OBJDIR}/paw_softcore.o \
           ${OBJDIR}/paw_classical.o \
           ${OBJDIR}/paw_forcefield.o \
           ${OBJDIR}/paw_atoms.o \
           ${OBJDIR}/paw.o \
           ${OBJDIR}/paw_efg.o \
           ${OBJDIR}/paw_ioroutines.o \
           ${OBJDIR}/paw_iotra.o \
           ${OBJDIR}/paw_ionew.o \
           ${OBJDIR}/paw_qmmm.o \
           ${OBJDIR}/paw_cosmo.o \
           ${OBJDIR}/paw_warmup.o \
           ${OBJDIR}/paw_optfric.o 
#  the following is for the QMMM of Woo and Margl
#          ${OBJDIR}/mm_paw_modules.o \
#          ${OBJDIR}/mm_paw_core_mm.o \
#          ${OBJDIR}/mm_paw_interface.o
#          ${OBJDIR}/paw_md
#
OBJECTS3 = \
           ${OBJDIR}/paw_setups.o \
           ${OBJDIR}/paw_setupread.o \
           ${OBJDIR}/paw_potential.o \
           ${OBJDIR}/paw_occupations.o \
           ${OBJDIR}/paw_brillouin.o \
           ${OBJDIR}/paw_pairpotential.o \
           ${OBJDIR}/paw_graphics.o \
           ${OBJDIR}/paw_waves1.o \
           ${OBJDIR}/paw_waves2.o \
           ${OBJDIR}/paw_mixer.o \
           ${OBJDIR}/paw_cg.o \
           ${OBJDIR}/paw_kpoints.o \
           ${OBJDIR}/paw_vext.o \
           ${OBJDIR}/paw_vdw.o 
#           ${OBJDIR}/paw_pdos.o 
#          ${OBJDIR}/paw_optic.o \
#
OBJECTS= ${OBJECTS1} ${OBJECTS2} ${OBJECTS3} 
# 
#
# Definition of objects for the compilation of the PAW-tools
#
# Objects for atomic setup tool
OBJNEWATOM = \
          ${OBJDIR}/paw_newatom.o 
# Objects for atomic setup tool
OBJATOM = \
          ${OBJDIR}/paw_diffgl.o \
          ${OBJDIR}/paw_oldradial.o \
          ${OBJDIR}/paw_atom.o 
# Objects for paw_tra.x
OBJTRA =  \
          ${OBJDIR}/paw_tra.o 
# Objects for paw_wave.x
OBJWAVE=  \
          ${OBJDIR}/paw_wave.o
# Objects for paw_1davpot.x
OBJ1DAVPOT=  \
          ${OBJDIR}/paw_1davpot.o
# Objects for paw_cmcwave.x
OBJCMCWAVE=  \
          ${OBJDIR}/paw_cmcwave.o
# Objects for paw_grab.x
OBJGRAB=  \
          ${OBJDIR}/paw_grab.o
# Objects for paw_dos.x
OBJDOS=  \
          ${OBJDIR}/paw_dos.o
# Objects for paw_preopt.x
OBJPRE=  \
          ${OBJDIR}/paw_preopt.o 
# Objects for paw_converttra.x
OBJCONVERTTRA=  \
          ${OBJDIR}/paw_converttra.o
# Objects for paw_cleantra.x
OBJCLEANTRA=  \
          ${OBJDIR}/paw_cleantra.o
# Objects for paw_strc.x
OBJSTRC=  \
          ${OBJDIR}/paw_strc.o
# Objects for paw_toxyz.x
OBJTOXYZ=  \
          ${OBJDIR}/paw_toxyz.o
# Objects for paw_tostrc.x
OBJTOSTRC=  \
          ${OBJDIR}/paw_tostrc.o


#########################################################################
##  create preprocessor                                                ##
#########################################################################
f90pp: ${BINDIR}/f90pp_tmplts.x  ${OBJDIR}/version_writeparmfile.o
${BINDIR}/f90pp_tmplts.x: ${SRCDIR}/F90PP/f90pp_tmplts.f90
	${F90PP} -notemplates ${SRCDIR}/F90PP/f90pp_tmplts.f90 > ${OBJDIR}/f90pp_tmplts_d.${FEXT} 
	${COMPILE} -o ${OBJDIR}/f90pp_tmplts.o ${OBJDIR}/f90pp_tmplts_d.${FEXT}
	${LINK} -o ${BINDIR}/f90pp_tmplts.x ${OBJDIR}/f90pp_tmplts.o ${LLIBS}

${OBJDIR}/version_writeparmfile.o: ${BINDIR}/parmfilewriter.x 
	cat ${PAWDIR}/parms.in_use | ${POE_PREFIX} ${BINDIR}/parmfilewriter.x ${POE_SUFFIX} >  ${OBJDIR}/version_writeparmfile.${FEXT}
	${F90PP} -notemplates ${OBJDIR}/version_writeparmfile.${FEXT}> ${OBJDIR}/version_writeparmfile_d.${FEXT} 
	${COMPILE} -o ${OBJDIR}/version_writeparmfile.o ${OBJDIR}/version_writeparmfile_d.${FEXT}

${BINDIR}/parmfilewriter.x: ${SRCDIR}/F90PP/parmfilewriter.f90
	${F90PP} -notemplates ${SRCDIR}/F90PP/parmfilewriter.f90 > ${OBJDIR}/parmfilewriter_d.${FEXT} 
	${COMPILE} -o ${OBJDIR}/parmfilewriter.o ${OBJDIR}/parmfilewriter_d.${FEXT}
	${LINK} -o ${BINDIR}/parmfilewriter.x ${OBJDIR}/parmfilewriter.o ${LLIBS}
#
#########################################################################
##  link files and produce executable PAWX                             ##
#########################################################################
#
${PAWX} : f90pp ${OBJDIR}/FFTW_F77.I ${OBJDIR}/mpif.h ${LOBJS} \
                ${OBJDIR}/version_writeparmfile.o \
                ${OBJECTS} ${MPE} 
	${LINK} -o ${PAWX} ${OBJECTS} ${LOBJS} ${OBJDIR}/version_writeparmfile.o ${MPE} ${LLIBS}
	ar -ru $(PAWLIB) $(LOBJS) ${OBJDIR}/paw_mpelib_s.o ${OBJDIR}/version_writeparmfile.o
#
# produce executables for the Tools
#
${BINDIR}/paw_newatom.x: ${OBJNEWATOM} libpaw.a ${OBJDIR}/paw_setupread.o
	${LINK} -o ${BINDIR}/paw_newatom.x ${OBJNEWATOM} ${OBJDIR}/paw_setupread.o -lpaw ${LLIBS} 
#
${BINDIR}/paw_atom.x: ${OBJATOM} libpaw.a
	${LINK} -o ${BINDIR}/paw_atom.x ${OBJATOM} -lpaw ${LLIBS} 
#
${BINDIR}/paw_tra.x: ${OBJTRA} libpaw.a
	${LINK} -o ${BINDIR}/paw_tra.x ${OBJTRA} ${OBJDIR}/paw_forcefield.o ${OBJDIR}/paw_classical.o -lpaw ${LLIBS} 
#
${BINDIR}/paw_wave.x: ${OBJWAVE} libpaw.a
	${LINK} -o ${BINDIR}/paw_wave.x ${OBJWAVE} -lpaw ${LLIBS} 
#
${BINDIR}/paw_1davpot.x: ${OBJ1DAVPOT} libpaw.a
	${LINK} -o ${BINDIR}/paw_1davpot.x ${OBJ1DAVPOT} -lpaw ${LLIBS} 
#
${BINDIR}/paw_cmcwave.x: ${OBJCMCWAVE} libpaw.a
	${LINK} -o ${BINDIR}/paw_cmcwave.x ${OBJCMCWAVE} -lpaw ${LLIBS} 
#
${BINDIR}/paw_grab.x: ${OBJGRAB} libpaw.a
	${LINK} -o ${BINDIR}/paw_grab.x ${OBJGRAB} -lpaw ${LLIBS} 
#
${BINDIR}/paw_dos.x: ${OBJDOS} libpaw.a
	${LINK} -o ${BINDIR}/paw_dos.x ${OBJDOS} -lpaw ${LLIBS} 
#
${BINDIR}/paw_preopt.x: ${OBJPRE} libpaw.a
	${LINK} -o ${BINDIR}/paw_preopt.x ${OBJPRE}  ${OBJDIR}/paw_forcefield.o ${OBJDIR}/paw_classical.o -lpaw ${LLIBS}
#
${BINDIR}/paw_converttra.x: ${OBJCONVERTTRA} libpaw.a
	${LINK} -o ${BINDIR}/paw_converttra.x ${OBJCONVERTTRA} -lpaw ${LLIBS} 
#
${BINDIR}/paw_cleantra.x: ${OBJCLEANTRA} libpaw.a
	${LINK} -o ${BINDIR}/paw_cleantra.x ${OBJCLEANTRA} -lpaw ${LLIBS} 
#
${BINDIR}/paw_strc.x: ${OBJSTRC} libpaw.a
	${LINK} -o ${BINDIR}/paw_strc.x ${OBJSTRC} -lpaw ${LLIBS} 
#
${BINDIR}/paw_toxyz.x: ${OBJTOXYZ} libpaw.a
	${LINK} -o ${BINDIR}/paw_toxyz.x ${OBJTOXYZ} -lpaw ${LLIBS} 
#
${BINDIR}/paw_tostrc.x: ${OBJTOSTRC} libpaw.a
	${LINK} -o ${BINDIR}/paw_tostrc.x ${OBJTOSTRC} -lpaw ${LLIBS} 
#
# copy include files if necessary (controlled by if-statements above)
#
${OBJDIR}/FFTW_F77.I:
	${FFTWINCLUDE}
#
${OBJDIR}/mpif.h:
	${MPIINCLUDE}
#
#${OBJDIR}/mm_paw_f77.o 
#########################################################################
##  compile code files independent of parameter                        ##
##  and place the objects in OBJDIR                                    ##
#########################################################################
#
#__special rule for parallel interface because of preprocessor___________
${MPE} : ${OBJDIR}/%$(MODE).o: ${SRCDIR}/%.f90 ${OBJDIR}/mpif.h
	${F90PP} $< >${OBJDIR}/$*$(MODE)_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*$(MODE)_d.${FEXT}
#
#__general rule for object files_________________________________________
$(OBJECTS) $(LOBJS): ${OBJDIR}/%.o: ${SRCDIR}/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
#__compile the tools____________________________________________________
#
${OBJNEWATOM}: ${OBJDIR}/%.o : ${TOOLDIR}/Atomnew/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJATOM}: ${OBJDIR}/%.o : ${TOOLDIR}/Atom/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJTRA}: ${OBJDIR}/%.o : ${TOOLDIR}/Tra/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJWAVE}: ${OBJDIR}/%.o : ${TOOLDIR}/Wave/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJ1DAVPOT}: ${OBJDIR}/%.o : ${TOOLDIR}/Wave/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJCMCWAVE}: ${OBJDIR}/%.o : ${TOOLDIR}/Wave/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJGRAB}: ${OBJDIR}/%.o : ${TOOLDIR}/Grab/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJDOS}: ${OBJDIR}/%.o : ${TOOLDIR}/PDoS/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJPRE}: ${OBJDIR}/%.o : ${TOOLDIR}/Preopt/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJCONVERTTRA}: ${OBJDIR}/%.o : ${TOOLDIR}/Tra/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJCLEANTRA}: ${OBJDIR}/%.o : ${TOOLDIR}/Tra/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJSTRC}: ${OBJDIR}/%.o : ${TOOLDIR}/Strc/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJTOXYZ}: ${OBJDIR}/%.o : ${TOOLDIR}/Strc/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#
${OBJTOSTRC}: ${OBJDIR}/%.o : ${TOOLDIR}/Strc/%.f90
	${F90PP} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
#########################################################################
##  include dependencies through mod files                             ##
#########################################################################
ifeq ($(ALLDEP),T)
 ${OBJDIR}/paw_filehandler.o:   ${OBJDIR}/paw_strings.o
 ${OBJDIR}/paw_linkedlist.o:    ${OBJDIR}/paw_strings.o
 ${OBJDIR}/paw_periodictable.o: ${OBJDIR}/paw_strings.o
 ${OBJDIR}/paw_ioroutines.o:    ${OBJDIR}/paw_strings.o
#
 ${OBJDIR}/paw_timing.o:        ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_linkedlist.o:    ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_report.o:        ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_waves1.o:        ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_waves2.o:        ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_augmentation.o:  ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw.o:               ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_constraints.o:   ${OBJDIR}/paw_mpelib${MODE}.o 
 ${OBJDIR}/paw_potential.o:     ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_pairpotential.o: ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_isolate.o:       ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_qmmm.o:          ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_thermostat.o:    ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_occupations.o:   ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_ionew.o:         ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_atoms.o:         ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_classical.o:     ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_thermostat.o:    ${OBJDIR}/paw_mpelib${MODE}.o 
 ${OBJDIR}/paw_debug.o:         ${OBJDIR}/paw_mpelib${MODE}.o 
 ${OBJDIR}/paw_debug.o:          ${OBJDIR}/paw_waves1.o 
 ${OBJDIR}/paw_debug.o:          ${OBJDIR}/paw_waves2.o 

 ${OBJDIR}/paw_dimer.o:         ${OBJDIR}/paw_mpelib${MODE}.o 


 ${OBJDIR}/paw_ldaplusu.o:      ${OBJDIR}/paw_periodictable.o
 ${OBJDIR}/paw_ioroutines.o:    ${OBJDIR}/paw_periodictable.o

 ${OBJDIR}/paw_ioroutines.o:    ${OBJDIR}/paw_linkedlist.o
 ${OBJDIR}/paw_constraints.o:   ${OBJDIR}/paw_linkedlist.o
 ${OBJDIR}/paw_occupations.o:   ${OBJDIR}/paw_linkedlist.o
 ${OBJDIR}/paw_waves1.o:         ${OBJDIR}/paw_linkedlist.o
 ${OBJDIR}/paw_waves2.o:         ${OBJDIR}/paw_linkedlist.o
 ${OBJDIR}/paw_efg.o:           ${OBJDIR}/paw_linkedlist.o

 ${OBJDIR}/paw_atoms.o:         ${OBJDIR}/paw_report.o
 ${OBJDIR}/paw_ionew.o:         ${OBJDIR}/paw_report.o
 ${OBJDIR}/paw_occupations.o:   ${OBJDIR}/paw_report.o
 ${OBJDIR}/paw_qmmm.o:          ${OBJDIR}/paw_report.o
 ${OBJDIR}/paw_classical.o:     ${OBJDIR}/paw_report.o
 ${OBJDIR}/paw_thermostat.o:    ${OBJDIR}/paw_report.o

 ${OBJDIR}/paw_ioroutines.o:    ${OBJDIR}/paw_clock.o 
 ${OBJDIR}/paw_ionew.o:         ${OBJDIR}/paw_waves1.o
 ${OBJDIR}/paw_ionew.o:         ${OBJDIR}/paw_waves2.o

 ${OBJDIR}/paw_waves2.o:        ${OBJDIR}/paw_waves1.o

 ${OBJDIR}/paw_cg.o:               ${OBJDIR}/paw_waves1.o

 ${OBJDIR}/paw_ioroutines.o:    ${OBJDIR}/paw_forcefield.o
# ${OBJDIR}/paw_optic.o:		${OBJDIR}/paw_fft.o
# ${OBJDIR}/paw_optic.o:		${OBJDIR}/paw_waves.o
 ${OBJDIR}/paw_qmmm.o:          ${OBJDIR}/paw_report.o
endif


