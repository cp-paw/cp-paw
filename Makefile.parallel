#
#
SHELL=/bin/sh
#
#########################################################################
##                                                                     ##
##  make an paw executable and a paw library using gmake               ##
##  ====================================================               ##
##                                                                     ##
#########################################################################
#########################################################################
#
# The following block of variables is set by the configure
# script (AC_SUBST @...@ and sed-Commands var...)
#
#___________________________ Fortran90 compiler + compiler flags 
COMPILE=/opt/intel/compiler70/ia32/bin/ifc -c -mp   -xW -tpp7 
#___________________________ Fortran77 compiler + compiler flags (for blas) 
COMPILE77=/opt/intel/compiler70/ia32/bin/ifc -c -mp  -xW -tpp7 
#___________________________ root directory of the PAW distribution
PAWDIR=/homer/cfoerst/ARCHIVE_PAW/PAW_sandbox
#___________________________ path to the object files
OBJDIR=/homer/cfoerst/ARCHIVE_PAW/PAW_sandbox/bin/ifc/Objects/fast
#___________________________ path to the source files
SRCDIR=/homer/cfoerst/ARCHIVE_PAW/PAW_sandbox/src
#___________________________ path to the binaries
BINDIR=/homer/cfoerst/ARCHIVE_PAW/PAW_sandbox/bin
#___________________________ the PAW-binary (inclusive path)
PAWX=/homer/cfoerst/ARCHIVE_PAW/PAW_sandbox/bin/ifc/ppaw_fast.x
#___________________________ set to yes, if FFTW is used
FFTW=
#___________________________ root directory of FFTW library
FFTWDIR=notset
#___________________________ root directory of MPICH library
MPICHDIR=notset
#___________________________ the extension of files to be compiled
FEXT=f90
#___________________________ the hardware architecture
ARCH=ifc
#___________________________ set to T, if this is Makefile.parallel 
PARALLEL=T
#___________________________ controls removal of preprocessed sources
OPTRM=rm
#___________________________ path to f90pp sources
F90PPDIR=${SRCDIR}/F90PP
#___________________________ directory name for not optimized objects
NONEDIR=none
#___________________________ directory name for optimized objects
FASTDIR=fast
#___________________________ directory name for parallel objects (opt.)
PARALLELDIR=fast
#___________________________ extension for parallel Makefile
PARALLELNAME=parallel
#___________________________ directory name objects of the debug-binary
DEBUGDIR=debug
#___________________________ path to the tool-directory
TOOLDIR=/homer/cfoerst/ARCHIVE_PAW/PAW_sandbox/src/Tools
#___________________________ the way to compile the tools 
TOOLCOMP=fast
#___________________________ the GNU make utility
MAKE=gmake
#
##########################################################################
##  define parameters                                                   ##
##########################################################################
#
# at this point a distinction between parallel and sequential Makefile is
# made, as differen preprocessor variables have to be used and different
# libraries are linked
#
ifeq (${PARALLEL},T)   #select parallel versus scalar paw_mpelib.f90
  MODE = _p
  LLIBS= -Vaxlib -lfftw -lmkl_lapack -lmkl_p4 -lguide -lpthread -lfmpich -lmpich  
  LINK=/opt/intel/compiler70/ia32/bin/ifc -xW -tpp7 -static  -I${OBJDIR} -L${OBJDIR} -L/homer/cfoerst/PAW/lib/fftw-intel/fftw/.libs/ -L/opt/intel/mkl/lib/32 -L/homer/cfoerst/ARCHIVE_PAW/libs/mpich-1.2.5_ifc/lib/
  F90PPOPT=-DCPPVARIABLE_PARALLEL -DCPPVAR_FFT_FFTW -DCPPVAR_U77 -arch=${ARCH}
  #
  # MPIF.H is an include file for the MPICH-library
  # for parallel compilation, this file has to be copied into
  # the object directory
  #
  ifneq (${ARCH},ibm)
    ifneq (${MPICHDIR},notset)
      MPICHINCLUDE=cp ${MPICHDIR}/include/mpif.h ${OBJDIR}/mpif.h
    endif
  endif
else
  MODE = _s
  LLIBS= -Vaxlib -lfftw -lmkl_lapack -lmkl_p4 -lguide -lpthread  
  LINK=/opt/intel/compiler70/ia32/bin/ifc -xW -tpp7 -static  -I${OBJDIR} -L${OBJDIR} -L/homer/cfoerst/PAW/lib/fftw-intel/fftw/.libs/ -L/opt/intel/mkl/lib/32  
  F90PPOPT=-DCPPVAR_FFT_FFTW -DCPPVAR_U77 -arch=${ARCH}
endif
#
# out of the file src/paw_mpelib.f a parallel _p and
# a sequential _s version are produced
#
MPE = ${OBJDIR}/paw_mpelib$(MODE).o
#
# FFTW_F77.I is an include file for the FFTW-library
# in case FFTW is linked, this file has to be copied into the 
# object directory
# 
ifeq (${FFTW},yes)
  FFTWINCLUDE=cp ${FFTWDIR}/fortran/fftw_f77.i ${OBJDIR}/FFTW_F77.I
endif
#
# paw_mpelib.f holds the subroutines necessary for parallel execution
# of the code. Via preprocessor variables, this source is split up into
# two files, one for parallel and one for sequential execution. ($MODE is
# defined in the if-statement above)
# libpaw.a holds the object files and can be linked to any code which 
# needs a PAW subroutine (leave the # after libpaw.a)
# MPE   = ${OBJDIR}/paw_mpelib$(MODE).o
PAWLIB= ${OBJDIR}/libpaw.a#         
#
#########################################################################
## Definition of the targets                                           ##
#########################################################################
#
# MIND: The Absoft and fort compiler always put the *.mod-files into the
#       current directory. In order to have them in the object-directories
#       the user types for example 'make none', wich causes a change
#       into the object-directory and second call of the Makefile.none
#       The default is then the compilation of the right binary.
# 
#
default: ${PAWX}
#
# THE PAW BINARIES
#
all: debug none fast parallel tools
#
# Two targets aim at compiling every PAW-binary (not tool). This
# is necessary, because the dependencies due to modules just have
# to be resolved at the very first calculation. In this case the
# variable ALLDEP is set to T.
#
# as the parallel objects are - by default - compiled in the
# same directory as the optimized sequential ones, there is no 
# need to resolve the dependencies. Therefore there is no
# parallel_new in the next list
#
all_new: debug_new none_new fast_new parallel tools
#
tools: 	 atom tra wave grab dos converttra cleantra strc tostrc toxyz
#
none:   
	ALLDEP=F; export ALLDEP; cd ${OBJDIR}/${NONEDIR}; \
	${MAKE} -f ${PAWDIR}/Makefile.${NONEDIR}
#
none_new:
	ALLDEP=T; export ALLDEP; cd ${OBJDIR}/${NONEDIR}; \
	${MAKE} -f ${PAWDIR}/Makefile.${NONEDIR}
#
fast:   
	ALLDEP=F; export ALLDEP; cd ${OBJDIR}/${FASTDIR}; \
	${MAKE} -f ${PAWDIR}/Makefile.${FASTDIR}
#
fast_new:   
	ALLDEP=T; export ALLDEP; cd ${OBJDIR}/${FASTDIR}; \
	${MAKE} -f ${PAWDIR}/Makefile.${FASTDIR}
#
debug:  
	ALLDEP=F; export ALLDEP; cd ${OBJDIR}/${DEBUGDIR}; \
	${MAKE} -f ${PAWDIR}/Makefile.${DEBUGDIR}
#
debug_new:  
	ALLDEP=T; export ALLDEP; cd ${OBJDIR}/${DEBUGDIR}; \
	${MAKE} -f ${PAWDIR}/Makefile.${DEBUGDIR}
#
parallel:
	ALLDEP=F; export ALLDEP; cd ${OBJDIR}/${PARALLELDIR}; \
	${MAKE} -f ${PAWDIR}/Makefile.${PARALLELNAME}
#
parallel_new:
	ALLDEP=T; export ALLDEP=T; cd ${OBJDIR}/${PARALLELDIR}; \
	${MAKE} -f ${PAWDIR}/Makefile.${PARALLELNAME}
#
# THE PAW TOOLS
#
atom:
	cd ${OBJDIR}/${TOOLCOMP}; ${MAKE} -f ${PAWDIR}/Makefile.${TOOLCOMP} \
           ${BINDIR}/${ARCH}/paw_atom.x 
#
tra:
	cd ${OBJDIR}/${TOOLCOMP}; ${MAKE} -f ${PAWDIR}/Makefile.${TOOLCOMP} \
           ${BINDIR}/${ARCH}/paw_tra.x 
#
wave:
	cd ${OBJDIR}/${TOOLCOMP}; ${MAKE} -f ${PAWDIR}/Makefile.${TOOLCOMP} \
           ${BINDIR}/${ARCH}/paw_wave.x 
#
grab:
	cd ${OBJDIR}/${TOOLCOMP}; ${MAKE} -f ${PAWDIR}/Makefile.${TOOLCOMP} \
           ${BINDIR}/${ARCH}/paw_grab.x 
#
dos:
	cd ${OBJDIR}/${TOOLCOMP}; ${MAKE} -f ${PAWDIR}/Makefile.${TOOLCOMP} \
           ${BINDIR}/${ARCH}/paw_dos.x 
#
converttra:
	cd ${OBJDIR}/${TOOLCOMP}; ${MAKE} -f ${PAWDIR}/Makefile.${TOOLCOMP} \
           ${BINDIR}/${ARCH}/paw_converttra.x 
#
cleantra:
	cd ${OBJDIR}/${TOOLCOMP}; ${MAKE} -f ${PAWDIR}/Makefile.${TOOLCOMP} \
           ${BINDIR}/${ARCH}/paw_cleantra.x 
#
strc:
	cd ${OBJDIR}/${TOOLCOMP}; ${MAKE} -f ${PAWDIR}/Makefile.${TOOLCOMP} \
           ${BINDIR}/${ARCH}/paw_strc.x 
#
toxyz:
	cd ${OBJDIR}/${TOOLCOMP}; ${MAKE} -f ${PAWDIR}/Makefile.${TOOLCOMP} \
           ${BINDIR}/${ARCH}/paw_toxyz.x 
#
tostrc:
	cd ${OBJDIR}/${TOOLCOMP}; ${MAKE} -f ${PAWDIR}/Makefile.${TOOLCOMP} \
           ${BINDIR}/${ARCH}/paw_tostrc.x 
#
##########################################################################
##  define object files kept in the library                             ##
##########################################################################
#
LOBJS = \
        ${OBJDIR}/paw_trace.o \
        ${OBJDIR}/paw_error.o \
        ${OBJDIR}/paw_filehandler.o \
        ${OBJDIR}/paw_clock.o \
        ${OBJDIR}/paw_lock.o \
        ${OBJDIR}/paw_timing.o \
        ${OBJDIR}/paw_linkedlist.o \
        ${OBJDIR}/paw_strings.o \
        ${OBJDIR}/paw_dft.o \
        ${OBJDIR}/paw_dftaddendum.o \
        ${OBJDIR}/paw_constants.o \
        ${OBJDIR}/paw_spherical.o \
        ${OBJDIR}/paw_generalpurpose.o \
        ${OBJDIR}/paw_report.o \
        ${OBJDIR}/paw_periodictable.o \
        ${OBJDIR}/paw_radial.o \
        ${OBJDIR}/paw_usage.o \
        ${OBJDIR}/paw_selftest.o \
        ${OBJDIR}/paw_strcio.o \
        ${OBJDIR}/paw_cell.o \
        ${OBJDIR}/paw_pdos.o \
        ${OBJDIR}/paw_library.o \
        ${OBJDIR}/paw_polynom.o 
#
##########################################################################
##  define other objects                                                ##
##########################################################################
#
OBJECTS1 = \
           ${OBJDIR}/paw_thermostat.o \
           ${OBJDIR}/paw_isolate.o \
           ${OBJDIR}/paw_assist.o \
           ${OBJDIR}/paw_ldaplusu.o \
           ${OBJDIR}/paw_lists.o \
           ${OBJDIR}/paw_constraints.o \
           ${OBJDIR}/paw_fft.o \
#
OBJECTS2 = \
           ${OBJDIR}/paw_augmentation.o \
           ${OBJDIR}/paw_atoms.o \
           ${OBJDIR}/paw.o \
           ${OBJDIR}/paw_efg.o \
           ${OBJDIR}/paw_ioroutines.o \
           ${OBJDIR}/paw_iotra.o \
           ${OBJDIR}/paw_ionew.o \
           ${OBJDIR}/paw_qmmm.o \
           ${OBJDIR}/paw_classical.o \
           ${OBJDIR}/paw_continuum.o \
           ${OBJDIR}/paw_warmup.o \
#  the following is for the QMMM of Woo and Margl
#          ${OBJDIR}/mm_paw_modules.o \
#          ${OBJDIR}/mm_paw_core_mm.o \
#          ${OBJDIR}/mm_paw_interface.o
#          ${OBJDIR}/paw_md
#
OBJECTS3 = \
           ${OBJDIR}/paw_setups.o \
           ${OBJDIR}/paw_potential.o \
           ${OBJDIR}/paw_occupations.o \
           ${OBJDIR}/paw_pairpotential.o \
           ${OBJDIR}/paw_graphics.o \
           ${OBJDIR}/paw_waves1.o \
           ${OBJDIR}/paw_waves2.o \
           ${OBJDIR}/paw_kpoints.o \
           ${OBJDIR}/paw_vext.o \
#           ${OBJDIR}/paw_pdos.o 
#          ${OBJDIR}/paw_optic.o \
#
OBJECTS= ${OBJECTS1} ${OBJECTS2} ${OBJECTS3} 
# 
#
# Definition of objects for the compilation of the PAW-tools
#
# Objects for atomic setup tool
OBJATOM = \
          ${OBJDIR}/paw_diffgl.o \
          ${OBJDIR}/paw_atom.o
# Objects for paw_tra.x
OBJTRA =  \
          ${OBJDIR}/paw_tra.o
# Objects for paw_wave.x
OBJWAVE=  \
          ${OBJDIR}/paw_wave.o
# Objects for paw_grab.x
OBJGRAB=  \
          ${OBJDIR}/paw_grab.o
# Objects for paw_dos.x
OBJDOS=  \
          ${OBJDIR}/paw_dos.o
# Objects for paw_converttra.x
OBJCONVERTTRA=  \
          ${OBJDIR}/paw_converttra.o
# Objects for paw_cleantra.x
OBJCLEANTRA=  \
          ${OBJDIR}/paw_cleantra.o
# Objects for paw_strc.x
OBJSTRC=  \
          ${OBJDIR}/paw_strc.o
# Objects for paw_toxyz.x
OBJTOXYZ=  \
          ${OBJDIR}/paw_toxyz.o
# Objects for paw_tostrc.x
OBJTOSTRC=  \
          ${OBJDIR}/paw_tostrc.o


#########################################################################
##  create preprocessor                                                ##
#########################################################################
F90PP: ${BINDIR}/${ARCH}/f90pp_tmplts.x 
${BINDIR}/${ARCH}/f90pp_tmplts.x: ${F90PPDIR}/f90pp_tmplts.f90
	${BINDIR}/f90pp -notemplates ${F90PPDIR}/f90pp_tmplts.f90 > \
            ${OBJDIR}/f90pp_tmplts_d.${FEXT} 
	${COMPILE} -o ${OBJDIR}/f90pp_tmplts.o ${OBJDIR}/f90pp_tmplts_d.${FEXT}
	${LINK} -o ${BINDIR}/${ARCH}/f90pp_tmplts.x ${OBJDIR}/f90pp_tmplts.o
	${OPTRM} ${OBJDIR}/f90pp_tmplts_d.${FEXT}
#
#########################################################################
##  link files and produce executable PAWX                             ##
#########################################################################
#
${PAWX} : F90PP ${OBJDIR}/FFTW_F77.I ${OBJDIR}/mpif.h ${LOBJS} \
                ${OBJECTS} ${MPE} \
                ${OBJDIR}/liblapack.a \
                ${OBJDIR}/libblas.a \
                ${OBJDIR}/libfftpack.a
	${LINK} -o ${PAWX} ${OBJECTS} ${LOBJS} ${MPE} ${LLIBS}
	ar -ru $(PAWLIB) $(LOBJS) ${OBJDIR}/paw_mpelib_s.o
#
# produce executables for the Tools
#
${BINDIR}/${ARCH}/paw_atom.x: ${OBJATOM} libpaw.a
	${LINK} -o ${BINDIR}/${ARCH}/paw_atom.x ${OBJATOM} -lpaw ${LLIBS} 
#
${BINDIR}/${ARCH}/paw_tra.x: ${OBJTRA} libpaw.a
	${LINK} -o ${BINDIR}/${ARCH}/paw_tra.x ${OBJTRA} -lpaw ${LLIBS} 
#
${BINDIR}/${ARCH}/paw_wave.x: ${OBJWAVE} libpaw.a
	${LINK} -o ${BINDIR}/${ARCH}/paw_wave.x ${OBJWAVE} -lpaw ${LLIBS} 
#
${BINDIR}/${ARCH}/paw_grab.x: ${OBJGRAB} libpaw.a
	${LINK} -o ${BINDIR}/${ARCH}/paw_grab.x ${OBJGRAB} -lpaw ${LLIBS} 
#
${BINDIR}/${ARCH}/paw_dos.x: ${OBJDOS} libpaw.a
	${LINK} -o ${BINDIR}/${ARCH}/paw_dos.x ${OBJDOS} -lpaw ${LLIBS} 
#
${BINDIR}/${ARCH}/paw_converttra.x: ${OBJCONVERTTRA} libpaw.a
	${LINK} -o ${BINDIR}/${ARCH}/paw_converttra.x ${OBJCONVERTTRA} -lpaw ${LLIBS} 
#
${BINDIR}/${ARCH}/paw_cleantra.x: ${OBJCLEANTRA} libpaw.a
	${LINK} -o ${BINDIR}/${ARCH}/paw_cleantra.x ${OBJCLEANTRA} -lpaw ${LLIBS} 
#
${BINDIR}/${ARCH}/paw_strc.x: ${OBJSTRC} libpaw.a
	${LINK} -o ${BINDIR}/${ARCH}/paw_strc.x ${OBJSTRC} -lpaw ${LLIBS} 
#
${BINDIR}/${ARCH}/paw_toxyz.x: ${OBJTOXYZ} libpaw.a
	${LINK} -o ${BINDIR}/${ARCH}/paw_toxyz.x ${OBJTOXYZ} -lpaw ${LLIBS} 
#
${BINDIR}/${ARCH}/paw_tostrc.x: ${OBJTOSTRC} libpaw.a
	${LINK} -o ${BINDIR}/${ARCH}/paw_tostrc.x ${OBJTOSTRC} -lpaw ${LLIBS} 
#
# copy include files if necessary (controlled by if-statements above)
#
${OBJDIR}/FFTW_F77.I:
	${FFTWINCLUDE}
#
${OBJDIR}/mpif.h:
	${MPICHINCLUDE}
#
#${OBJDIR}/mm_paw_f77.o 
#########################################################################
##  compile code files independent of parameter                        ##
##  and place the objects in OBJDIR                                    ##
#########################################################################
#
#__special rule for parallel interface because of preprocessor___________
${MPE} : ${OBJDIR}/%$(MODE).o: ${SRCDIR}/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*$(MODE)_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*$(MODE)_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*$(MODE)_d.${FEXT}
#
#__compile lapack routines________________________________________________
${OBJDIR}/liblapack.a : ${SRCDIR}/Libs/lapack.f
	${COMPILE77} -o ${OBJDIR}/lapack.o ${SRCDIR}/Libs/lapack.f
	ar -ru ${OBJDIR}/liblapack.a ${OBJDIR}/lapack.o
	${OPTRM} ${OBJDIR}/lapack.o
#
#__compile blas routines________________________________________________
${OBJDIR}/libblas.a : ${SRCDIR}/Libs/blas.f
	${COMPILE77} -o ${OBJDIR}/blas.o ${SRCDIR}/Libs/blas.f
	ar -ru ${OBJDIR}/libblas.a ${OBJDIR}/blas.o
	${OPTRM} ${OBJDIR}/blas.o
#
#__compile fftpack routines________________________________________________
${OBJDIR}/libfftpack.a : ${SRCDIR}/Libs/fftpack.f
	${BINDIR}/f90pp ${F90PPOPT} ${SRCDIR}/Libs/fftpack.f > ${OBJDIR}/fftpack_d.${FEXT}
	${COMPILE} -o ${OBJDIR}/fftpack.o ${OBJDIR}/fftpack_d.f90
	ar -ru ${OBJDIR}/libfftpack.a ${OBJDIR}/fftpack.o
	${OPTRM} ${OBJDIR}/fftpack.o
#
#__general rule for object files_________________________________________
$(OBJECTS) $(LOBJS): ${OBJDIR}/%.o: ${SRCDIR}/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#
#__compile the tools____________________________________________________
${OBJATOM}: ${OBJDIR}/%.o : ${TOOLDIR}/Atom/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#
${OBJTRA}: ${OBJDIR}/%.o : ${TOOLDIR}/Tra/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#
${OBJWAVE}: ${OBJDIR}/%.o : ${TOOLDIR}/Wave/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#
${OBJGRAB}: ${OBJDIR}/%.o : ${TOOLDIR}/Grab/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#
${OBJDOS}: ${OBJDIR}/%.o : ${TOOLDIR}/PDoS/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#
${OBJCONVERTTRA}: ${OBJDIR}/%.o : ${TOOLDIR}/Tra/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#
${OBJCLEANTRA}: ${OBJDIR}/%.o : ${TOOLDIR}/Tra/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#
${OBJSTRC}: ${OBJDIR}/%.o : ${TOOLDIR}/Strc/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#
${OBJTOXYZ}: ${OBJDIR}/%.o : ${TOOLDIR}/Strc/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#
${OBJTOSTRC}: ${OBJDIR}/%.o : ${TOOLDIR}/Strc/%.f90
	${BINDIR}/f90pp ${F90PPOPT} $< >${OBJDIR}/$*_d.${FEXT}
	${COMPILE} -o $@ ${OBJDIR}/$*_d.${FEXT}
	${OPTRM} ${OBJDIR}/$*_d.${FEXT}
#########################################################################
##  include dependencies through mod files                             ##
#########################################################################
ifeq ($(ALLDEP),T)
 ${OBJDIR}/paw_filehandler.o:   ${OBJDIR}/paw_strings.o
 ${OBJDIR}/paw_linkedlist.o:    ${OBJDIR}/paw_strings.o
 ${OBJDIR}/paw_periodictable.o: ${OBJDIR}/paw_strings.o
 ${OBJDIR}/paw_ioroutines.o:    ${OBJDIR}/paw_strings.o
#
 ${OBJDIR}/paw_timing.o:        ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_linkedlist.o:    ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_report.o:        ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_waves1.o:        ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_waves2.o:        ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_augmentation.o:  ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw.o:               ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_constraints.o:   ${OBJDIR}/paw_mpelib${MODE}.o 
 ${OBJDIR}/paw_potential.o:     ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_pairpotential.o: ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_isolate.o:       ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_qmmm.o:          ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_thermostat.o:    ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_occupations.o:   ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_ionew.o:         ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_atoms.o:         ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_classical.o:     ${OBJDIR}/paw_mpelib${MODE}.o
 ${OBJDIR}/paw_thermostat.o:    ${OBJDIR}/paw_mpelib${MODE}.o 

 ${OBJDIR}/paw_ldaplusu.o:      ${OBJDIR}/paw_periodictable.o
 ${OBJDIR}/paw_ioroutines.o:    ${OBJDIR}/paw_periodictable.o

 ${OBJDIR}/paw_ioroutines.o:    ${OBJDIR}/paw_linkedlist.o
 ${OBJDIR}/paw_constraints.o:   ${OBJDIR}/paw_linkedlist.o
 ${OBJDIR}/paw_occupations.o:   ${OBJDIR}/paw_linkedlist.o
 ${OBJDIR}/paw_waves1.o:         ${OBJDIR}/paw_linkedlist.o
 ${OBJDIR}/paw_waves2.o:         ${OBJDIR}/paw_linkedlist.o
 ${OBJDIR}/paw_efg.o:           ${OBJDIR}/paw_linkedlist.o

 ${OBJDIR}/paw_atoms.o:         ${OBJDIR}/paw_report.o
 ${OBJDIR}/paw_ionew.o:         ${OBJDIR}/paw_report.o
 ${OBJDIR}/paw_occupations.o:   ${OBJDIR}/paw_report.o
 ${OBJDIR}/paw_qmmm.o:          ${OBJDIR}/paw_report.o
 ${OBJDIR}/paw_classical.o:     ${OBJDIR}/paw_report.o
 ${OBJDIR}/paw_thermostat.o:    ${OBJDIR}/paw_report.o

 ${OBJDIR}/paw_ioroutines.o:    ${OBJDIR}/paw_clock.o 
 ${OBJDIR}/paw_ionew.o:         ${OBJDIR}/paw_waves1.o
 ${OBJDIR}/paw_ionew.o:         ${OBJDIR}/paw_waves2.o

 ${OBJDIR}/paw_waves2.o:        ${OBJDIR}/paw_waves1.o

 ${OBJDIR}/paw.o:               ${OBJDIR}/paw_continuum.o

# ${OBJDIR}/paw_optic.o:		${OBJDIR}/paw_fft.o
# ${OBJDIR}/paw_optic.o:		${OBJDIR}/paw_waves.o
endif


