#!/bin/ksh
############################################################################
#
#  prepares an executable "paw_$2" in the executable directory
#  using the source "paw_$2.f90", which is in a sub-directory of the
#  "Tools" directory
#
#  Usage:  "paw_maketool -h -g -x tool"
#
#############################################################################
#PAWDIR=/u/blo.2/PAW/ (is already defined in ~/.profile)
FEXT=f90
USAGE='\n
Usage: "paw_maketool options"\n
Options can be any combination of the following\n
\t -g\t\t    compile for debugging\n
\t -x string\t  specify specific tool to be compiled \n
\t\t\t (paw_dos,paw_grab,paw_new,paw_show,paw_cleantra,paw_tra\n
\t\t\t ,paw_wave,paw_mpeg_encode,paw_copy)\n
\t\t\t default is to compile all tools'
#################################################################
##  analyze command-line options                               ##
#################################################################
# Save all arguments.
typeset -i NOPTIONS="$#"
set -A OPTIONS -- "$@"
echo Hello! this is paw_maketool
echo You selected the the options: $@
PATH=.:$PATH
while (( $# )); do
  case "$1" in
  -h)
     echo $USAGE
     exit 1
    ;;
  -g)
     DEBUG=T
     shift
    ;;
  -x)
     shift
     NAME=$1     
     shift
    ;;
  --)
    shift
    break
    ;;
  *)
    echo "\n Unknown option $1."
    echo ${USAGE}
    exit 1
    ;;
  esac
done
if [ -z "${DEBUG}" ] ; then DEBUG=F ; fi
#
###################################################################
##  define some variables                                        ##
###################################################################
F90PP=${PAWDIR}/F90PP/f90pp
EXEDIR=${PAWDIR}/X/
OBJDIR=${PAWDIR}/Objects
TOOLDIR=${PAWDIR}/Tools
case "$DEBUG" in
  F) OBJDIR="${OBJDIR}/none" ;;
  T) OBJDIR="${OBJDIR}/dbg" ;;
esac
# this is for the absoft compiler
COMPILE=f90 
FFLAGS=" -c -i${OBJDIR} -L${OBJDIR} -module ${OBJDIR} -I${OBJDIR}"
FFLAGS=" -c  -L${OBJDIR}  ${OBJDIR} -I${OBJDIR}"
LFLAGS=" -L${OBJDIR} -I${OBJDIR} -lpaw -lblas -llapack -lU77"
# this is for xlf
#FFLAGS="-c -I${OBJDIR} -lessl -qmoddir=${OBJDIR}/ -qhalt=e -qlanglvl=90STD -qextchk"
#LFLAGS="-L${OBJDIR} -lpaw -lessl -bmaxdata:0x70000000 -bloadmap:loadmap -I${OBJDIR} -qextchk"
#
###################################################################
##  resolve                                                      ##
###################################################################
#
case "$DEBUG" in
# F) FFLAGS="$FFLAGS -O3 -qfloat=rsqrt:hssngl:fltint " ;;
  F) FFLAGS="$FFLAGS" ;;
  T) FFLAGS="$FFLAGS -g " ;;
# T) FFLAGS="$FFLAGS -g -C -qfullpath -qflttrap=zerodivide:invalid:enable -qsigtrap" ;;
esac
#
if [ -z "${NAME}" ] ; then 
 set -A TOOLS  paw_cleantra paw_dos paw_grab paw_new paw_show paw_strc paw_tra paw_wave paw_copy paw_mpeg_encode
else
 set -A TOOLS $NAME
fi
echo I will compile the PAW-Tools: ${TOOLS[*]}
#
for NAME in ${TOOLS[*]} ; do
#
  case "$NAME" in
    paw_cleantra)  SRCDIR=${TOOLDIR}/Tra
                   DONE=F ;;
    paw_dos)       SRCDIR=${TOOLDIR}/PDoS 
                   DONE=F ;;
    paw_grab)      SRCDIR=${TOOLDIR}/Grab 
                   DONE=F ;;
    paw_new)       SRCDIR=${TOOLDIR}/New 
                   cp ${SRCDIR}/paw_new ${EXEDIR}
                   DONE=T ;;
    paw_show)      SRCDIR=${TOOLDIR}/Show
                   cp ${SRCDIR}/paw_show ${EXEDIR}
                   DONE=T ;;        
    paw_strc)      SRCDIR=${TOOLDIR}/Strc 
                   DONE=F ;;
    paw_tra)       SRCDIR=${TOOLDIR}/Tra 
                   DONE=F ;;
    paw_mpeg_encode)       SRCDIR=${TOOLDIR}/Tra 
                   cp ${SRCDIR}/paw_mpeg_encode ${EXEDIR}
                   DONE=T ;;
    paw_copy)       SRCDIR=${TOOLDIR}/Scripts 
                   cp ${SRCDIR}/paw_copy ${EXEDIR}
                   DONE=T ;;
    paw_wave)      SRCDIR=${TOOLDIR}/Wave 
                   DONE=F ;;
  esac
#
  if [ "$DONE" = "F" ] ; then  
    ${F90PP} ${SRCDIR}/${NAME}.f90 >${OBJDIR}/${NAME}_t_d.${FEXT}
    ${COMPILE} ${FFLAGS} -o${OBJDIR}/${NAME}_t.o ${OBJDIR}/${NAME}_t_d.${FEXT}
    ${COMPILE} ${LFLAGS} -o${EXEDIR}${NAME} ${OBJDIR}/${NAME}_t.o 
    if [ "DEBUG" = "T" ] ; then
      rm ${OBJDIR}/${NAME}_t_d.${FEXT}
      rm ${OBJDIR}/${NAME}_t.o 
    fi
  fi
#
done
exit

